#!/bin/bash

# Usage: pb_php_compile in out

scriptdir="$(dirname ${BASH_SOURCE[0]})" || exit 1

include_path="@rel_include_dir@"

if ! @srcdir_equals_builddir@ ; then
    # We are not building in the source tree
    include_path="$include_path:@top_src_fullpath@/@rel_include_dir@"
fi

tmpheader="$(mktemp)"
in="$1"
tmpout="$2"
out="$2"

# magic string used in pb_make.make and pb_cat_compile too
gen_file_str="@generated_file_string@ from $1"

case $2 in
    *.html|*.htm)
        tmpout="${2}.tmp"
        ;;
    *.ph|*.phd|*.php)
        echo -en "<?php /* $gen_file_str */\n?>" > "$tmpheader"
        ;;
    *.js|*.css|*.jsp|*.cs)
        echo "/* $gen_file_str */" > "$tmpheader"
        tmpout="${2}.tmp"
        ;;
    *)
        echo "unknown file type for $2"  1>&2
        exit 1
        ;;
esac


function cleanup()
{
    rm -f "$tmpheader"
    [ "$tmpout" != "$out" ] && rm -f "$tmpout"
    if [ "$1" = 1 ] ; then
        rm -f "$out"
        echo "$0 failed" 1>&2
    #else
    #    echo "$0 succeeded" 1>&2
    fi
    exit $1
}

set -e
set -o pipefail

export PHP_OUTFILENAME="$out"

cat "$tmpheader" $in | sed -e 's/<?php\s*\/\*\s*server\s*\*\//<@php@/g' |\
 @php_path@\
 -d display_errors=stderr\
 -d "error_reporting=E_ALL|E_STRICT|E_NOTICE"\
 -d "variables_order=ESCGP"\
 -d "include_path=$include_path"\
 -d "auto_prepend_file=$scriptdir/pb_auto_prepend.ph"\
 -d "auto_append_file=$scriptdir/pb_auto_append.ph"\
 -d "safe_mode_allowed_env_vars=PHP_"\
 | sed -e 's/<@php@/<?php/g' > "$tmpout" || cleanup 1


case $2 in
    *.js|*.jsp)
        @js_compile@ "$tmpout" > "$out" || cleanup 1
        ;;
    *.css|*.cs)
        @css_compile@ "$tmpout" > "$out" || cleanup 1
        ;;
    *.html|*.htm)
        l="$(head -1 $tmpout)" || cleanup 1
        if [[ "$l" =~ '<!DOCTYPE' ]] ; then
            # first line
            echo "$l" > "$out"
            echo "<!-- $gen_file_str -->" >> "$out"
            # the rest of it
            sed -n '2,1000000p' $tmpout >> "$out"
        else
            echo "<!-- $gen_file_str -->" > "$out"
            cat $tmpout >> "$out"
        fi
        ;;
    *)
        ;;
esac

cleanup 0

